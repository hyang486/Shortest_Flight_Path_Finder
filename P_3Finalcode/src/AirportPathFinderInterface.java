
// --== CS400 Spring 2023 File Header Information ==--
// Name: Brian Han
// Email: shan289@wisc.edu
// Team: BJ
// TA: Naman Gupta
// Lecturer: Gary Dahl
// Notes to Grader: <optional extra notes>
import javafx.stage.Stage;

import java.util.List;

/**
 * AirportPathFinderFD handles running the UI, interacting with BD to load data,
 * send user input, and receive computed results (i.e. the computed shortest
 * path).
 *
 **/
public interface AirportPathFinderInterface {
    // public AirportPathFinderFrontend ();
    // AirportPathBD backend;

    public void start(Stage stage) throws Exception; // runs the loop for the program:
    // calls drawMap(). Lets user do the following:
    // 1) UI lets the user choose to find a route,
    // 2) Three airport mode
    // 3) quit program
    // 4) reset map (if path(s)/ anything else) have been drawn

    public void drawMap(); // loads airport data (get list of airports to display through backend) and
    // draws initial map setup (drawing airports, maybe paths between airports?)

    public void createRoute(); // steps the user through the process of selecting start/end points:
    // 1) prompt user to select start airport
    // 2) prompt user to select second airport
    // 3) if user needs three airports for the route, prompt user to select //third
    // airport
    // let user hit [Confirm] buttons to control this
    // 4) draws the path on the map

    public void createRouteThreeAirports(); // similar to createRoute(), but lets the user
    // select three airports instead

    public void resetMap(); // resets the map with any user input data

    // public String getAirport(); // takes in user’s input when user clicks on
    // airport on the map (gets the airport code e.g. “LAX” )

    // public void drawPath(List<String> path); // takes a path generated by the BD
    // and draws it to the map (path is list of airport codes (e.g. “LAX”) )
}
